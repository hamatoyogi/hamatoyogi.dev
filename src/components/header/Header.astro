---
import { GithubLogo, TwitterLogo } from '~components/icons';

import ThemeToggle from './ThemeToggle.astro';

const links = [
  {
    href: '/about',
    text: 'about',
    'data-astro-prefetch': 'viewport',
  },
  {
    href: '/blog',
    text: 'blog',
    'data-astro-viewport': 'viewport',
  },
  {
    href: '/work',
    text: 'work',
    'data-astro-prefetch': 'viewport',
  },
  {
    href: '/appearances',
    text: 'appearances',
    'data-astro-prefetch': 'viewport',
  },
  {
    href: 'https://anchor.fm/fedbites',
    text: 'FedBites Podcast',
    target: '_blank',
    'data-astro-prefetch': 'viewport',
  },
  // Todo - figure out why Qwik astro not loading when deployed on Vercel
  // {
  //   href: '/playground',
  //   text: 'playground',
  //   'data-astro-prefetch': 'viewport',
  // },
];
---

<header
  class:list={[
    'p-6 sticky top-0 flex items-center justify-between flex-wrap bg-white',
    'dark:bg-mirage dark:text-lavender-gray',
  ]}
>
  <a href="/" data-astro-prefetch>
    <h2 class="flex flex-shrink-0 items-center text-white lg:mr-8">
      <span
        class="bg-gradient-to-r from-dodger-blue to-ebony-clay bg-clip-text text-xl font-semibold tracking-tight text-transparent dark:from-lavender-gray dark:to-melrose"
        >HamatoYogi.dev</span
      >
    </h2>
  </a>
  <div class="block">
    <button
      class="hamburger hamburger--elastic relative z-20 flex items-center lg:hidden"
      type="button"
      role="navigation"
      aria-label="navigation menu"
    >
      <span class="hamburger-box">
        <span class="hamburger-inner"> </span>
      </span>
    </button>
  </div>
  <nav
    data-state="closed"
    class="absolute left-0 top-[-100vh] z-10 h-full w-full flex-grow p-10 transition-all duration-300 data-open:top-0 data-open:h-screen data-open:bg-white dark:data-open:bg-black lg:static lg:top-0 lg:flex lg:w-auto lg:items-center lg:p-0"
  >
    <ul
      class="flex h-full w-full flex-col gap-8 lg:flex-grow lg:flex-row lg:items-center lg:gap-12"
    >
      {
        links.map(({ href, text, ...rest }) => (
          <li class="mt-4 block capitalize text-slate-500 transition-all hover:text-slate-600 dark:text-slate-300 dark:hover:text-white lg:mt-0 lg:inline-block">
            <a href={href} {...rest}>
              {text}
            </a>
          </li>
        ))
      }
      <li class="md:hidden">
        <a
          href="https://twitter.com/hamatoyogi"
          target="_blank"
          rel="noopener"
          aria-label="twitter logo"
        >
          <TwitterLogo />
        </a>
      </li>
      <li class="md:hidden">
        <a
          href="https://github.com/hamatoyogi"
          target="_blank"
          rel="noopener"
          aria-label="github logo"
        >
          <GithubLogo />
        </a>
      </li>
      <li class="inline-block lg:ml-auto"><ThemeToggle /></li>
    </ul>
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const hamburger = document.querySelector('.hamburger');
    const nav = document.querySelector('nav');
    hamburger.addEventListener('click', () => {
      hamburger.classList.toggle('is-active');
      const navOpenState = nav.getAttribute('data-state');

      if (navOpenState === 'closed') {
        return nav.setAttribute('data-state', 'open');
      }
      return nav.setAttribute('data-state', 'closed');
    });
  });
</script>

<style is:global>
  :root {
    --hamburger-color: black;
    --hamburger-width: 32px;
    --hamburger-line-height: 2px;
  }

  .dark {
    --hamburger-color: white;
  }
</style>

<style>
  .hamburger {
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
  }
  .hamburger:hover {
    opacity: 0.7;
  }
  .hamburger.is-active:hover {
    opacity: 0.7;
  }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: var(--hamburger-color);
  }

  .hamburger-box {
    width: var(--hamburger-width);
    height: 24px;
    display: inline-block;
    position: relative;
  }

  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: -2px;
  }
  .hamburger-inner,
  .hamburger-inner::before,
  .hamburger-inner::after {
    width: var(--hamburger-width);
    height: var(--hamburger-line-height);
    background-color: var(--hamburger-color);
    border-radius: var(--hamburger-line-height);
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }
  .hamburger-inner::before,
  .hamburger-inner::after {
    content: '';
    display: block;
  }
  .hamburger-inner::before {
    top: -10px;
  }
  .hamburger-inner::after {
    bottom: -10px;
  }
  /*
   * Elastic
   */
  .hamburger--elastic .hamburger-inner {
    top: 2px;
    transition-duration: 0.275s;
    transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .hamburger--elastic .hamburger-inner::before {
    top: 10px;
    transition: opacity 0.125s 0.275s ease;
  }
  .hamburger--elastic .hamburger-inner::after {
    top: 20px;
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .hamburger--elastic.is-active .hamburger-inner {
    transform: translate3d(0, 10px, 0) rotate(135deg);
    transition-delay: 0.075s;
  }
  .hamburger--elastic.is-active .hamburger-inner::before {
    transition-delay: 0s;
    opacity: 0;
  }
  .hamburger--elastic.is-active .hamburger-inner::after {
    transform: translate3d(0, -20px, 0) rotate(-270deg);
    transition-delay: 0.075s;
  }

  nav[data-state='open'] ul {
    top: 0;
  }
</style>
